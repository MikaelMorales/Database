<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<dict>
		<key>connection</key>
		<dict>
			<key>database</key>
			<string>pcdev_clicker</string>
			<key>host</key>
			<string>dslabpc41.epfl.ch</string>
			<key>kcid</key>
			<string>-4196319248337575535</string>
			<key>name</key>
			<string>Guest</string>
			<key>rdbms_type</key>
			<string>mysql</string>
			<key>ssh_host</key>
			<string>dslabpc41.epfl.ch</string>
			<key>ssh_keyLocation</key>
			<string></string>
			<key>ssh_keyLocationEnabled</key>
			<integer>0</integer>
			<key>ssh_user</key>
			<string>guest</string>
			<key>sslCACertFileLocation</key>
			<string></string>
			<key>sslCACertFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslCertificateFileLocation</key>
			<string></string>
			<key>sslCertificateFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslKeyFileLocation</key>
			<string></string>
			<key>sslKeyFileLocationEnabled</key>
			<integer>0</integer>
			<key>type</key>
			<string>SPSSHTunnelConnection</string>
			<key>useSSL</key>
			<integer>0</integer>
			<key>user</key>
			<string>pcdev_clicker</string>
		</dict>
		<key>session</key>
		<dict>
			<key>connectionEncoding</key>
			<string>latin1</string>
			<key>contentFilter</key>
			<dict/>
			<key>contentPageNumber</key>
			<integer>1</integer>
			<key>contentSelection</key>
			<data>
			YnBsaXN0MDDUAQIDBAUGPj9YJHZlcnNpb25YJG9iamVjdHNZJGFy
			Y2hpdmVyVCR0b3ASAAGGoK8QEAcIFRYXGBkfICEoLTE1ODxVJG51
			bGzTCQoLDBAUV05TLmtleXNaTlMub2JqZWN0c1YkY2xhc3OjDQ4P
			gAKAA4AEoxESE4AFgAaACoAPVHR5cGVUcm93c1RrZXlzXxAmU2Vs
			ZWN0aW9uRGV0YWlsVHlwZVByaW1hcnlLZXllZERldGFpbHPTCQoL
			GhweoRuAB6EdgAiACW8QMwAxAEMAawAxADUAawBWAHcAbAA4AEMA
			NQBPADAAQwBwAEkATgA0AGwAZgBpAFYAMgBjAEoAZABoAFUAcwBm
			ADIAdAA3AGYAOAB5AE0ANgBBAEYAUwB1AGf/+AAxADgANgAyADYA
			NAnSIiMkJVokY2xhc3NuYW1lWCRjbGFzc2VzXxATTlNNdXRhYmxl
			RGljdGlvbmFyeaMkJidcTlNEaWN0aW9uYXJ5WE5TT2JqZWN00goL
			KSyiKiuAC4ANgA7SCy4vMFlOUy5zdHJpbmeADFdmb3JtX2lk0iIj
			MjNfEA9OU011dGFibGVTdHJpbmejMjQnWE5TU3RyaW5n0gsuLzeA
			DFpzdHVkZW50X2lk0iIjOTpeTlNNdXRhYmxlQXJyYXmjOTsnV05T
			QXJyYXnSIiMmPaImJ18QD05TS2V5ZWRBcmNoaXZlctFAQVRkYXRh
			gAEACAARABoAIwAtADIANwBKAFAAVwBfAGoAcQB1AHcAeQB7AH8A
			gQCDAIUAhwCMAJEAlgC/AMYAyADKAMwAzgDQATkBOgE/AUoBUwFp
			AW0BegGDAYgBiwGNAY8BkQGWAaABogGqAa8BwQHFAc4B0wHVAeAB
			5QH0AfgCAAIFAggCGgIdAiIAAAAAAAACAQAAAAAAAABCAAAAAAAA
			AAAAAAAAAAACJA==
			</data>
			<key>contentSortCol</key>
			<string>form_id</string>
			<key>contentSortColIsAsc</key>
			<true/>
			<key>contentViewport</key>
			<string>{{1, 0}, {1079, 660}}</string>
			<key>isToolbarVisible</key>
			<true/>
			<key>queries</key>
			<string>INSERT INTO clickers_grades (form_id, student_id, grade) SELECT "1Ck15kVwl8C5O0CpIN4lfiV2cJdhUsf2t7f8yM6AFSug", student_id, 0 FROM course_to_students CTS WHERE CTS.course_id = "CS-452/2016-2017/AUTOMNE";

SELECT student_id FROM course_to_students CTS WHERE CTS.course_id = "CS-452/2016-2017/AUTOMNE"

INSERT INTO clickers_grades (form_id, student_id, grade) SELECT ?, student_id, ? FROM course_to_students CTS WHERE CTS.course_id = ?;

select max(grade) from clickers_grades;</string>
			<key>table</key>
			<string>clickers_grades</string>
			<key>view</key>
			<string>SP_VIEW_CONTENT</string>
			<key>windowVerticalDividerPosition</key>
			<real>200</real>
		</dict>
	</dict>
	<key>encrypted</key>
	<false/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>select max(grade) from clickers_grades</string>
		<string>INSERT INTO clickers_grades (form_id, student_id, grade) SELECT "1Ck15kVwl8C5O0CpIN4lfiV2cJdhUsf2t7f8yM6AFSug", student_id, 0 FROM course_to_students CTS WHERE CTS.course_id = "CS-452/2016-2017/AUTOMNE"</string>
		<string>INSERT INTO clickers_grades (form_id, student_id, grade) VALUES(form_id, student_id, grade) SELECT "1Ck15kVwl8C5O0CpIN4lfiV2cJdhUsf2t7f8yM6AFSug", student_id, 0 FROM course_to_students CTS WHERE CTS.course_id = "CS-452/2016-2017/AUTOMNE"</string>
		<string>INSERT INTO clickers_grades (form_id, student_id, grade) VALUES("1Ck15kVwl8C5O0CpIN4lfiV2cJdhUsf2t7f8yM6AFSug", student_id, 0) SELECT student_id FROM course_to_students CTS WHERE CTS.course_id = "CS-452/2016-2017/AUTOMNE"</string>
		<string>SELECT student_id FROM course_to_students CTS WHERE CTS.course_id = "CS-452/2016-2017/AUTOMNE"</string>
		<string>SELECT SER.name FROM
(
	SELECT  I.series_id FROM (
				SELECT DISTINCT S1.issue_id, S1.type_id FROM  Story S1 LEFT JOIN
		(
			SELECT T.id FROM Story_Type T, Story S WHERE S.`type_id` = T.id GROUP BY T.id ORDER BY COUNT(*) DESC LIMIT 1) A
		ON S1.type_id = A.id WHERE A.id IS NULL   ) X
	INNER JOIN Issue I ON X.issue_id = I.id GROUP BY I.series_id ORDER BY COUNT(*) DESC LIMIT  1 ) Z
INNER JOIN Series SER ON Z.series_id = SER.id</string>
		<string>drop table course_to_students;
drop table clickers_grades;
drop table quiz_answers;
drop table clickers_answers;
drop table clickers_questions;
drop table clickers_forms;
drop table teacher_courses;
drop table clickers_students</string>
		<string>CREATE TABLE IF NOT EXISTS clickers_grades (
  form_id VARCHAR(64) NOT NULL,
  student_id VARCHAR(64) NOT NULL,
  grade INTEGER NOT NULL,
  PRIMARY KEY (form_id, student_id),
  FOREIGN KEY (form_id) REFERENCES clickers_forms(form_id),
  FOREIGN KEY (student_id) REFERENCES clickers_students(sciper)
)</string>
		<string>CREATE TABLE IF NOT EXISTS clickers_grades (
  form_id VARCHAR(64) NOT NULL,
  student_id VARCHAR(64) NOT NULL,
  grade INTEGER NOT NULL,
  PRIMARY KEY (form_id, student_id),
  FOREIGN KEY (form_id) REFERENCES clickers_forms(form_id)
  FOREIGN KEY (student_id) REFERENCES clickers_students(sciper)</string>
		<string>CREATE TABLE IF NOT EXISTS course_to_students (
  course_id VARCHAR(64) NOT NULL,
  student_id VARCHAR(64) NOT NULL,
  PRIMARY KEY (course_id, student_id),
  FOREIGN KEY (course_id) REFERENCES teacher_courses(course_id),
  FOREIGN KEY (student_id) REFERENCES clickers_students(sciper)
)</string>
		<string>CREATE TABLE IF NOT EXISTS course_to_students (
  course_id VARCHAR(64) NOT NULL,
  student_id VARCHAR(64) NOT NULL,
  PRIMARY KEY (course_id, student_id),
  FOREIGN KEY (course_id) REFERENCES teacher_courses(course_id),
  FOREIGN KEY (student_id) REFERENCES students(sciper)
)</string>
		<string>CREATE TABLE IF NOT EXISTS clickers_students (
  sciper VARCHAR (16) NOT NULL,
  firstname VARCHAR(256),
  lastname VARCHAR(256),
  PRIMARY KEY (sciper)
)</string>
		<string>CREATE TABLE IF NOT EXISTS quiz_answers (
  form_id VARCHAR(64) NOT NULL,
  question_id VARCHAR(64) NOT NULL,
  answer_id INTEGER NOT NULL,
  user_id VARCHAR(64) NOT NULL,       -- id of the student that answered the question
  PRIMARY KEY (form_id, question_id, answer_id, user_id),  -- the primary key of the answer
  FOREIGN KEY (question_id, answer_id) REFERENCES clickers_answers(question_id, answer_id),
  FOREIGN KEY (form_id) REFERENCES clickers_forms(form_id)
)</string>
		<string>CREATE TABLE IF NOT EXISTS clickers_answers (
  form_id VARCHAR(64) NOT NULL,
  question_id VARCHAR(64) NOT NULL,
  answer_id INTEGER NOT NULL,
  answer_value TEXT,
  correct BOOLEAN,
  PRIMARY KEY (question_id, answer_id),
  FOREIGN KEY (question_id) REFERENCES clickers_questions(question_id),
  FOREIGN KEY (form_id) REFERENCES clickers_forms(form_id)
)</string>
		<string>CREATE TABLE IF NOT EXISTS clickers_questions (
  form_id VARCHAR(64) NOT NULL,
  question_id VARCHAR(64) NOT NULL,
  question_title VARCHAR(64),
  question_type INTEGER,
  is_active BOOL NOT NULL,
  answer_nb INT NOT NULL,
  point_nb INT NOT NULL,
  question_order INT NOT NULL,
  PRIMARY KEY (question_id),
  FOREIGN KEY (form_id) REFERENCES clickers_forms(form_id)
)</string>
		<string>CREATE TABLE IF NOT EXISTS clickers_forms (
  form_id VARCHAR(64) NOT NULL,
  form_title VARCHAR(64),
  creator_id VARCHAR(64) NOT NULL,
  is_active BOOL NOT NULL,
  question_nb INT NOT NULL,
  max_answer_nb INT NOT NULL,
  course_id VARCHAR(64) NOT NULL,
  PRIMARY KEY (form_id),
  FOREIGN KEY (course_id) REFERENCES teacher_courses(course_id)
)</string>
		<string>CREATE TABLE IF NOT EXISTS teacher_courses (
  course_id VARCHAR(64) NOT NULL,
  code VARCHAR(64),
  english_name VARCHAR(64),
  french_name VARCHAR(64),
  year VARCHAR(64),
  semester VARCHAR(64),
  inscription_link VARCHAR(256),
  PRIMARY KEY (course_id)
)</string>
		<string>)</string>
		<string>drop table clickers_students</string>
		<string>drop table course_to_students;
drop table clickers_grades;
drop table quiz_answers;
drop table clickers_answers;
drop table clickers_questions;
drop table clickers_forms;
drop table teacher_courses</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>5.7.18-0ubuntu0.16.04.1</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
